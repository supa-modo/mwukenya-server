import { Model } from "sequelize";
import { UserAttributes, UserCreationAttributes, UserRole, MembershipStatus, Gender } from "../types";
declare class User extends Model<UserAttributes, UserCreationAttributes> implements UserAttributes {
    id: string;
    firstName: string;
    lastName: string;
    otherNames?: string;
    email?: string;
    phoneNumber: string;
    idNumber: string;
    passwordHash: string;
    gender?: Gender;
    county?: string;
    sacco?: string;
    route?: string;
    membershipStatus: MembershipStatus;
    membershipNumber?: string;
    membershipDate?: Date;
    role: UserRole;
    isActive: boolean;
    isEmailVerified: boolean;
    isPhoneVerified: boolean;
    isIdNumberVerified: boolean;
    delegateId?: string;
    coordinatorId?: string;
    delegateCode?: string;
    coordinatorCode?: string;
    lastLogin?: Date;
    refreshToken?: string;
    passwordResetToken?: string;
    passwordResetExpires?: Date;
    createdAt: Date;
    updatedAt: Date;
    get fullName(): string;
    get fullNameWithOthers(): string;
    validatePassword(password: string): Promise<boolean>;
    updatePassword(newPassword: string): Promise<void>;
    toJSON(): Partial<UserAttributes>;
    isMember(): boolean;
    isDelegate(): boolean;
    isCoordinator(): boolean;
    isAdmin(): boolean;
    canManageUsers(): boolean;
    canRegisterDelegates(): boolean;
    canRegisterMembers(): boolean;
    static hashPassword(password: string): Promise<string>;
    static findByPhone(phoneNumber: string): Promise<User | null>;
    static findByEmail(email: string): Promise<User | null>;
    static findByIdNumber(idNumber: string): Promise<User | null>;
    static findByMembershipNumber(membershipNumber: string): Promise<User | null>;
    static findByDelegateCode(delegateCode: string): Promise<User | null>;
    static findByCoordinatorCode(coordinatorCode: string): Promise<User | null>;
    static generateUniqueMembershipNumber(maxRetries?: number): Promise<string>;
    static generateMembershipNumber(): string;
    private static generateFallbackMembershipNumber;
    static generateDelegateCode(): string;
    static generateCoordinatorCode(): string;
    static formatPhoneNumber(phoneNumber: string): string;
}
export default User;
//# sourceMappingURL=User.d.ts.map